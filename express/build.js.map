{"version":3,"sources":["webpack:///webpack/bootstrap ec7edbd975f48de2ec44","webpack:///./express/server.js","webpack:///external \"express\"","webpack:///external \"express-jwt\"","webpack:///external \"express-graphql\"","webpack:///external \"aws-sdk\"","webpack:///./twobyfour/index.js","webpack:///./twobyfour/twobyfour.js","webpack:///external \"graphql\"","webpack:///./twobyfour/utils.js","webpack:///./twobyfour/types.js","webpack:///./twobyfour/db/dynamodb.js","webpack:///./model/index.js","webpack:///./model/queries/index.js","webpack:///./model/queries/channel.js","webpack:///./model/types/index.js","webpack:///./model/types/recent_video.js","webpack:///./model/types/channel.js","webpack:///./model/types/channel_input.js","webpack:///./model/validators/index.js","webpack:///external \"validator\"","webpack:///./model/types/video.js","webpack:///./model/types/video_input.js","webpack:///./model/mutations/index.js","webpack:///./model/mutations/create_channel.js"],"names":["config","update","accessKeyId","secretAccessKey","region","setDoc","DynamoDB","DocumentClient","schema","app","use","secret","credentialsRequired","graphiql","pretty","context","DB","token","req","user","listen","console","log","Types","twobyfour","queries","Object","keys","Error","query","name","fields","parseRoot","mutations","mutation","typeCache","parseType","_config","assign","parseField","input","parseList","type","list","required","newType","graphql","validateField","value","validators","Array","isArray","reduce","p","v","then","Promise","resolve","validateFields","values","defs","key","validation","args","root","params","mapObj","o","f","ctx","result","forEach","k","call","String","Int","Float","Boolean","ID","docClient","doc","resourceCache","clearCache","getResource","table","_params","Key","TableName","get","promise","res","putResource","put","updateResource","deleteResource","channel","slug","permissions","TABLE_NAME","recentVideo","channelInput","video","videoInput","channel_position","description","youtube_id","title","duration","recent_videos","blurb","logo_url","external_url","external_facebook","external_twitter","external_instagram","isLength","min","max","options","str","reject","matches","regex","mod","isAlphanumeric","locale","isURL","_isURL","url","channel_id","time_added"],"mappings":"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","file":"build.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ec7edbd975f48de2ec44","\nimport express from 'express'\nimport jwt from 'express-jwt'\nimport graphqlHTTP from 'express-graphql'\nimport AWS from 'aws-sdk'\nimport twobyfour from '../twobyfour'\nimport DB from '../twobyfour/db/dynamodb'\nimport model from '../model'\n\n// setup aws\nAWS.config.update({\n  accessKeyId: 'AKIAIAWM2JKH5NM2N7DQ',\n  secretAccessKey: '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',\n  region: 'us-east-1'\n});\n// init the database client\nDB.setDoc(new AWS.DynamoDB.DocumentClient({ region: 'us-east-1' }))\n\n// build the grambda schema\nconst schema = twobyfour(model)\n\nconst app = express()\n\napp.use(jwt({\n  secret: 'raaaaasd-secret',\n  credentialsRequired: false\n}))\n\napp.use('/graphql', graphqlHTTP(req => ({\n  schema,\n  graphiql: true,\n  pretty: true,\n  context: {\n    DB,\n    token: req.user\n  }\n})))\n\napp.listen(3000, () => console.log('Churn API listening on port 3000'));\n\n\n\n// WEBPACK FOOTER //\n// ./express/server.js","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 1\n// module chunks = 0","module.exports = require(\"express-jwt\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express-jwt\"\n// module id = 2\n// module chunks = 0","module.exports = require(\"express-graphql\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express-graphql\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"aws-sdk\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"aws-sdk\"\n// module id = 4\n// module chunks = 0","\nimport twobyfour from './twobyfour'\nimport Types from './types'\n\nexport {\n  Types\n}\n\nexport default twobyfour\n\n\n\n// WEBPACK FOOTER //\n// ./twobyfour/index.js","import { \n  GraphQLSchema,\n  GraphQLObjectType,\n  GraphQLInputObjectType,\n  GraphQLNonNull,\n  GraphQLList\n} from 'graphql'\nimport { mapObj } from './utils'\n\n/**\n * Primary entry function into twobyfour. Expects a twobyfour schema,\n * and converts it into a usable graphql schema.\n */\nconst twobyfour = config => {\n  // minimum expectation is queries\n  if(!config.queries || Object.keys(config.queries) === 0){\n    throw new Error('twobyfour config must have a query object key set')\n  }\n\n  const schema = {\n    query: new GraphQLObjectType({\n      name: 'Query',\n      fields: mapObj(config.queries, parseRoot)\n    })\n  }\n\n  // parse mutations if available\n  if(config.mutations && Object.keys(config.mutations) > 0){\n    schema.mutation = new GraphQLObjectType({\n      name: 'Mutation',\n      fields: mapObj(config.mutations, parseRoot)\n    })\n  }\n\n  return new GraphQLSchema(schema)\n}\n\n// cache to hold the requested and parsed types\nconst typeCache = {}\n\n/**\n * Parse a field set with a name, and whether or not\n * it is an input type\n */\nconst parseType = config => {\n  const { name, fields } = config\n\n  // return cached type if available\n  if(typeCache[name]) { return typeCache[name] }\n\n  const _config = Object.assign({}, config, {\n    fields: mapObj(fields, parseField)\n  })\n\n  // set cache and return the correct object\n  return typeCache[name] = config.input ? \n    new GraphQLInputObjectType(_config) :\n    new GraphQLObjectType(_config)\n}\n\n/**\n * Parse a list type field\n */\nconst parseList = config => Object.assign({}, config, {\n  type: new GraphQLList(parseType(config))\n})\n\n/**\n * Parse an individual field of a type\n * It will recursively traverse the tree in the same manner\n * as graphql, but wrapping with extra requirements\n */\nconst parseField = config => {\n  const { list, fields, required, type } = config\n\n  if(list){\n    return parseList(type)\n  }\n\n  const newType = fields ? parseType(type) : type.graphql\n  return Object.assign({}, config, {\n    type: required ? new GraphQLNonNull(newType) : newType\n  })\n}\n\n/**\n * Validate a single value with an optional set of promise returning\n * validation functions\n */\nconst validateField = (value, validators = [], context) => {\n  if(Array.isArray(validators)){\n    // run the individual validators sequentially to ensure context caching works\n    return validators.reduce((p, v) => p.then(() => v(value, context)), Promise.resolve())\n  }\n  // single validator\n  return validators(value, context)\n}\n\n/**\n * Validate an object set of key/values, and its associated schema\n * definitions (which contain optional validator functions)\n */\nconst validateFields = (values, defs, context) => {\n  // validate each arg in seuqential order to utilise context caching correctly\n  return Object.keys(values).reduce((p, key) =>\n    p.then(() => validateField(values[key], defs[key].validation, context)),\n  Promise.resolve())\n}\n\n/**\n * Parse a config type, which could either be a query or a mutation.\n * The type makes no difference to the parser, as details should be on\n * the config objects.\n */\nconst parseRoot = config => ({\n  type: parseType(config.type),\n  args: mapObj(config.args || {}, parseField),\n  resolve: (root, params, context) =>\n    validateFields(params, config.args, context)\n    .then(() => config.resolve(root, params, context))\n})\n\n\nexport default twobyfour\n\n\n\n// WEBPACK FOOTER //\n// ./twobyfour/twobyfour.js","module.exports = require(\"graphql\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"graphql\"\n// module id = 7\n// module chunks = 0","\n/**\n * Perform an Array.map like function on an object\n */\nconst mapObj = (o, f, ctx) => {\n  ctx = ctx || this\n  var result = {}\n  Object.keys(o).forEach(k => {\n    result[k] = f.call(ctx, o[k], k, o);\n  })\n  return result\n}\n\nexport {\n  mapObj\n}\n\n\n// WEBPACK FOOTER //\n// ./twobyfour/utils.js","/**\n * This types file is used, in case there needs to be multi module type\n * matching at some stage. Grambda converts to the correct types when\n * being parsed by certain modules. It is only for scalar types currently\n */\nimport { \n  GraphQLString,\n  GraphQLInt,\n  GraphQLFloat,\n  GraphQLBoolean,\n  GraphQLID\n} from 'graphql'\n\nexport default {\n  String: { graphql: GraphQLString },\n  Int: { graphql: GraphQLInt },\n  Float: { graphql: GraphQLFloat },\n  Boolean: { graphql: GraphQLBoolean },\n  ID: { graphql: GraphQLID }\n}\n\n\n// WEBPACK FOOTER //\n// ./twobyfour/types.js","/**\n * Dynamodb interface implementation for twobyfour\n */\n\n/**\n * The document client used to interface with the database\n */\nlet docClient\nconst setDoc = doc => docClient = doc\n\n/**\n * The cache used to store resources grabbed within a single call.\n * This is so that if multiple fields/permissions/validations require the\n * same resource within a call, it will only be grabbed once\n */\nlet resourceCache = {}\n\n/**\n * Clear the resource cache\n */\nconst clearCache = () => resourceCache = {}\n\n/**\n * Get a resource from the DB\n * The params provided match graphql's param object layout and context\n */\nconst getResource = (table, params, context) => {\n  // convert the params to dynamo params\n  const _params = {\n    Key: params,\n    TableName: table\n  }\n\n  return docClient.get(_params).promise().then(res => {\n    console.log(res)\n    return res\n  })\n}\n\n/**\n * Put a resource in the DB\n * The params given match graphql's param object layout and context\n */\nconst putResource = (table, params, context) => {\n  // convert to dynamo params\n  const _params = {\n    //Item: ...,\n    TableName: table\n  }\n\n  return docClient.put(_params).promise()\n}\n\n/**\n * Update a resource in the DB\n * The params given match graphq's param object layout and context\n */\nconst updateResource = (table, params, context) => {\n\n}\n\n/**\n * Delete a resource in the DB\n * The params given match graphq's param object layout and context\n */\nconst deleteResource = (table, params, context) => {\n\n}\n\nexport default {\n  setDoc,\n  getResource\n}\n\n\n\n// WEBPACK FOOTER //\n// ./twobyfour/db/dynamodb.js","import queries from './queries'\nimport mutations from './mutations'\n\nexport default {\n  queries,\n  mutations\n}\n\n\n// WEBPACK FOOTER //\n// ./model/index.js","import channel from './channel'\n\nexport default {\n  channel\n}\n\n\n// WEBPACK FOOTER //\n// ./model/queries/index.js","\nimport { channel } from '../types'\n\nexport default {\n  type: channel,\n  args: {\n    slug: channel.fields.slug,\n  },\n  permissions: [\n    /*Permissions.channelOwner,\n    (args, { token }) => {\n      if(args.slug !== token.channel){\n        return Promise.reject(new Error('You must be channel owner to run this query'))\n      }\n    },\n    (args, { DB }) => {\n      return DB.getResource('someresource', args.something)\n        .then(item => {\n          if(item.name !== 'person'){\n            return Promise.reject(new Error('Some thing inside some resource doesn\\'t check out'))\n          }\n        })\n    }*/\n  ],\n  resolve (root, params, context) {\n    return context.DB.getResource(channel.TABLE_NAME, params, context)\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./model/queries/channel.js","import recentVideo from './recent_video'\nimport channel from './channel'\nimport channelInput from './channel_input'\nimport video from './video'\nimport videoInput from './video_input'\n\nexport {\n  recentVideo,\n  channel,\n  channelInput,\n  video,\n  videoInput\n}\n\n\n// WEBPACK FOOTER //\n// ./model/types/index.js","import { Types } from '../../twobyfour'\n\nexport default {\n  name: 'recentVideo',\n  fields: {\n    channel_position: {\n      type: Types.Int,\n      description: 'The position of the recent video in the channel. Also the lookup id.'\n    },\n    youtube_id: {\n      type: Types.String,\n      description: 'The youtube if of the recent video'\n    },\n    title: {\n      type: Types.String,\n      description: 'The title of the recent video'\n    },\n    duration: {\n      type: Types.Int,\n      description: 'The duration of the recent video'\n    }\n  },\n  resolve(channel, params, context) {\n    return channel.recent_videos\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./model/types/recent_video.js","import { Types } from '../../twobyfour'\nimport recentVideo from './recent_video'\n\nexport default {\n  TABLE_NAME: 'churn-channels',\n  name: 'channel',\n  fields: {\n    slug: {\n      type: Types.String,\n      description: 'URL slug for the channel and also primary id'\n    },\n    title: {\n      type: Types.String,\n      description: 'The title of the channel'\n    },\n    blurb: {\n      type: Types.String,\n      description: 'A blurb explaining what the channel is about'\n    },\n    logo_url: {\n      type: Types.String,\n      description: 'The URL of the logo image for the channel'\n    },\n    external_url: {\n      type: Types.String,\n      description: 'The external URL related to the channel'\n    },\n    external_facebook: {\n      type: Types.String,\n      description: 'The facebook URL related to the channel'\n    },\n    external_twitter: {\n      type: Types.String,\n      description: 'The twitter URL related to the channel'\n    },\n    external_instagram: {\n      type: Types.String,\n      description: 'The instagram URL related to the channel'\n    },\n    recent_videos: {\n      list: true,\n      description: 'The list of most recently added videos',\n      type: recentVideo\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./model/types/channel.js","import { Types } from '../../twobyfour'\nimport { isLength, matches, isURL } from '../validators'\n\nexport default {\n  name: 'channelInput',\n  input: true,\n  fields: {\n    slug: {\n      type: Types.String,\n      description: 'The desired URL slug for the channel',\n      required: true,\n      validators: [\n        isLength(1, 64),\n        matches(/^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$/)\n      ]\n    },\n    title: {\n      type: Types.String,\n      description: 'The title of the channel',\n      required: true,\n      validators: [\n        isLength(1, 64)\n      ]\n    },\n    blurb: {\n      type: Types.String,\n      description: 'A blurb explaining what the channel is about',\n      validators: [\n        isLength(1, 256)\n      ]\n    },\n    logo_url: {\n      type: Types.String,\n      description: 'The URL of the logo image for the channel',\n      required: true,\n      validators: [\n        isURL()\n      ]\n    },\n    external_url: {\n      type: Types.String,\n      description: 'The external URL related to the channel',\n      validators: [\n        isURL()\n      ]\n    },\n    external_facebook: {\n      type: Types.String,\n      description: 'The facebook URL related to the channel',\n      validators: [\n        isURL()\n      ]\n    },\n    external_twitter: {\n      type: Types.String,\n      description: 'The twitter URL related to the channel',\n      validators: [\n        isURL()\n      ]\n    },\n    external_instagram: {\n      type: Types.String,\n      description: 'The instagram URL related to the channel',\n      validators: [\n        isURL()\n      ]\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./model/types/channel_input.js","/**\n * Common validation functions\n * Mostly wrapped versions of node-validator with error strings\n */\nimport {\n  isLength as _isLength,\n  matches as _matches,\n  isAlphanumeric as _isAlphanumeric\n} from 'validator'\n\n/**\n * Check length of string\n */\nconst isLength = (min, max, options = {}) => {\n  return str => {\n    if(!_isLength(str, { min, max, ...options })){\n      return Promise.reject(new Error(`Invalid length. Must be between ${min} and ${max} characters.`))\n    }\n  }\n}\n\n/**\n * Check for regex match for string\n */\nconst matches = (regex, mod) => {\n  return str => {\n    if(!_matches(str, regex, mod)){\n      return Promise.reject(new Error(`Invalid string. Must mutch regular expression: ${regex}.`))\n    }\n  }\n}\n\n/**\n * Check if string is alphanumeric\n **/\nconst isAlphanumeric = locale => {\n  return str => {\n    if(!_isAlphanumeric(str, locale)){\n      return Promise.reject(new Error('String must be contain only letters and numbers'))\n    }\n  }\n}\n\n/**\n * Check is string is a valid URL\n **/\nconst isURL = options => {\n  return str => {\n    if(!_isURL(str, options)){\n      return Promise.reject(new Error('String must be a valid URL.'))\n    }\n  }\n}\n\nexport {\n  isLength,\n  matches,\n  isAlphanumeric,\n  isURL\n}\n\n\n// WEBPACK FOOTER //\n// ./model/validators/index.js","module.exports = require(\"validator\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"validator\"\n// module id = 19\n// module chunks = 0","import { Types } from '../../twobyfour'\n\nexport default {\n  name: 'video',\n  fields: {\n    url: {\n      type: Types.String,\n      description: 'The URL by which the video was added',\n    },\n    channel_id: {\n      type: Types.String,\n      description: 'The slug id of the owning channel',\n    },\n    channel_position: {\n      type: Types.Int,\n      description: 'the order of the video in the channel (reverse)',\n    },\n    youtube_id: {\n      type: Types.String,\n      description: 'The Youtube video id',\n    },\n    time_added: {\n      type: Types.String,\n      description: 'When the video was added to the channel',\n    },\n    title: {\n      type: Types.String,\n      description: 'The title of the video',\n    },\n    duration: {\n      type: Types.Int,\n      description: 'Duration of the video in seconds',\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./model/types/video.js","import { Types } from '../../twobyfour'\nimport { isURL } from '../validators'\n\nexport default {\n  name: 'videoInput',\n  input: true,\n  fields: {\n    channel_id: {\n      type: Types.String,\n      required: true,\n      description: 'The slug id of the owning channel'\n    },\n    url: {\n      type: Types.String,\n      required: true,\n      description: 'The URL of the video to be added to the channel',\n      validators: isURL()\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./model/types/video_input.js","import createChannel from './create_channel'\nimport updateChannel from './update_channel'\nimport addVideo from './add_video'\n\nexport default {\n  //createChannel,\n  //updateChannel,\n  //addVideo\n}\n\n\n// WEBPACK FOOTER //\n// ./model/mutations/index.js","\nimport { channel, channelInput } from '../types'\n\nexport default {\n  description: 'create a new channel',\n  type: channel,\n  args: {\n    channel: channelInput\n  },\n  permissions: [],\n  resolve (root, params, context) {\n    return context.DB.putResource(channel.TABLE_NAME, params, context)\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./model/mutations/create_channel.js"],"sourceRoot":""}