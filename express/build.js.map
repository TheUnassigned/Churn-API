{"version":3,"sources":["webpack:///webpack/bootstrap 0d1d38cc17ff9cfa1097","webpack:///./express/server.js","webpack:///external \"express\"","webpack:///external \"express-jwt\"","webpack:///external \"express-graphql\"","webpack:///external \"aws-sdk\"","webpack:////Users/mattway/repos/twobyfour/index.js","webpack:////Users/mattway/repos/twobyfour/src/index.js","webpack:////Users/mattway/repos/twobyfour/src/twobyfour.js","webpack:///external \"graphql\"","webpack:////Users/mattway/repos/twobyfour/src/utils.js","webpack:////Users/mattway/repos/twobyfour/src/types.js","webpack:////Users/mattway/repos/twobyfour/src/db/dynamodb.js","webpack:///./model/index.js","webpack:///./model/queries/index.js","webpack:///./model/queries/channel.js","webpack:///./model/types/index.js","webpack:///./model/types/recent_video.js","webpack:///./model/types/channel.js","webpack:///./model/types/channel_input.js","webpack:///./model/validators/index.js","webpack:///external \"validator\"","webpack:///./model/types/video.js","webpack:///./model/types/video_input.js","webpack:///./model/mutations/index.js","webpack:///./model/mutations/create_channel.js"],"names":["config","update","accessKeyId","secretAccessKey","region","setDoc","DynamoDB","DocumentClient","schema","app","use","secret","credentialsRequired","graphiql","pretty","context","DB","token","req","user","listen","console","log","Types","twobyfour","queries","Object","keys","Error","query","name","fields","parseRoot","mutations","length","mutation","typeCache","parseType","_config","assign","parseField","input","parseList","type","list","required","newType","graphql","validateField","key","value","validators","Array","isArray","reduce","p","v","then","Promise","resolve","validateFields","values","defs","val","itemValidated","args","root","params","mapObj","o","f","ctx","result","forEach","k","call","isObjectWithKeys","String","Int","Float","Boolean","ID","docClient","doc","resourceCache","clearCache","getResource","get","promise","Item","reject","putResource","put","updateResource","table","deleteResource","channel","description","slug","permissions","TableName","TABLE_NAME","Key","recentVideo","channelInput","video","videoInput","channel_position","youtube_id","title","duration","recent_videos","blurb","logo_url","external_url","external_facebook","external_twitter","external_instagram","errReject","str","msg","isLength","min","max","options","matches","regex","mod","isAlphanumeric","locale","isURL","url","channel_id","time_added","createChannel","Expected","Exists"],"mappings":"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","file":"build.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0d1d38cc17ff9cfa1097","\nimport express from 'express'\nimport jwt from 'express-jwt'\nimport graphqlHTTP from 'express-graphql'\nimport AWS from 'aws-sdk'\nimport twobyfour from 'twobyfour'\nimport DB from 'twobyfour/src/db/dynamodb'\nimport model from '../model'\n\n// setup aws\nAWS.config.update({\n  accessKeyId: 'AKIAIAWM2JKH5NM2N7DQ',\n  secretAccessKey: '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',\n  region: 'us-east-1'\n});\n// init the database client\nDB.setDoc(new AWS.DynamoDB.DocumentClient({ region: 'us-east-1' }))\n\n// build the grambda schema\nconst schema = twobyfour(model)\n\nconst app = express()\n\napp.use(jwt({\n  secret: 'raaaaasd-secret',\n  credentialsRequired: false\n}))\n\napp.use('/graphql', graphqlHTTP(req => ({\n  schema,\n  graphiql: true,\n  pretty: true,\n  context: {\n    DB,\n    token: req.user\n  }\n})))\n\napp.listen(3000, () => console.log('Churn API listening on port 3000'));\n\n\n\n// WEBPACK FOOTER //\n// ./express/server.js","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 1\n// module chunks = 0","module.exports = require(\"express-jwt\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express-jwt\"\n// module id = 2\n// module chunks = 0","module.exports = require(\"express-graphql\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express-graphql\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"aws-sdk\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"aws-sdk\"\n// module id = 4\n// module chunks = 0","\nimport twobyfour, { Types } from './src'\n\nexport {\n  Types\n}\n\nexport default twobyfour\n\n\n// WEBPACK FOOTER //\n// /Users/mattway/repos/twobyfour/index.js","\nimport twobyfour from './twobyfour'\nimport Types from './types'\n\nexport {\n  Types\n}\n\nexport default twobyfour\n\n\n\n// WEBPACK FOOTER //\n// /Users/mattway/repos/twobyfour/src/index.js","import { \n  GraphQLSchema,\n  GraphQLObjectType,\n  GraphQLInputObjectType,\n  GraphQLNonNull,\n  GraphQLList\n} from 'graphql'\nimport { mapObj, isObjectWithKeys } from './utils'\n\n/**\n * Primary entry function into twobyfour. Expects a twobyfour schema,\n * and converts it into a usable graphql schema.\n */\nconst twobyfour = config => {\n  // minimum expectation is queries\n  if(!config.queries || Object.keys(config.queries) === 0){\n    throw new Error('twobyfour config must have a query object key set')\n  }\n\n  const schema = {\n    query: new GraphQLObjectType({\n      name: 'Query',\n      fields: mapObj(config.queries, parseRoot)\n    })\n  }\n\n  // parse mutations if available\n  if(config.mutations && Object.keys(config.mutations).length > 0){\n    schema.mutation = new GraphQLObjectType({\n      name: 'Mutation',\n      fields: mapObj(config.mutations, parseRoot)\n    })\n  }\n\n  return new GraphQLSchema(schema)\n}\n\n// cache to hold the requested and parsed types\nconst typeCache = {}\n\n/**\n * Parse a field set with a name, and whether or not\n * it is an input type\n */\nconst parseType = config => {\n  const { name, fields } = config\n\n  // return cached type if available\n  if(typeCache[name]) { return typeCache[name] }\n\n  const _config = Object.assign({}, config, {\n    fields: mapObj(fields, parseField)\n  })\n\n  // set cache and return the correct object\n  return typeCache[name] = config.input ? \n    new GraphQLInputObjectType(_config) :\n    new GraphQLObjectType(_config)\n}\n\n/**\n * Parse a list type field\n */\nconst parseList = config => Object.assign({}, config, {\n  type: new GraphQLList(parseType(config))\n})\n\n/**\n * Parse an individual field of a type\n * It will recursively traverse the tree in the same manner\n * as graphql, but wrapping with extra requirements\n */\nconst parseField = config => {\n  const { list, fields, required, type } = config\n\n  if(list){\n    return parseList(type)\n  }\n\n  const newType = fields ? parseType(config) : type.graphql\n  return Object.assign({}, config, {\n    type: required ? new GraphQLNonNull(newType) : newType\n  })\n}\n\n/**\n * Validate a single value with an optional set of promise returning\n * validation functions\n */\nconst validateField = (key, value, validators = [], context) => {\n  if(Array.isArray(validators)){\n    // run the individual validators sequentially to ensure context caching works\n    return validators.reduce((p, v) => p.then(() => v(key, value, context)), Promise.resolve())\n  }\n  // single validator\n  return validators(key, value, context)\n}\n\n/**\n * Validate an object set of key/values, and its associated schema\n * definitions (which contain optional validator functions)\n */\nconst validateFields = (values, defs, context) => {\n  // validate each arg in sequential order to utilise context caching correctly\n  return Object.keys(values).reduce((p, key) =>\n    p.then(() => {\n      const val = values[key]\n      const itemValidated = validateField(key, values[key], defs[key].validators, context)\n      \n      // TODO: add support for array arg types\n\n      // deal with nested arg types\n      if(isObjectWithKeys(val)){\n        return itemValidated.then(() => validateFields(val, defs[key].fields))\n      }\n      return itemValidated\n    }),\n  Promise.resolve())\n}\n\n/**\n * Parse a config type, which could either be a query or a mutation.\n * The type makes no difference to the parser, as details should be on\n * the config objects.\n */\nconst parseRoot = config => ({\n  type: parseType(config.type),\n  args: mapObj(config.args || {}, parseField),\n  resolve: (root, params, context) => \n    validateFields(params, config.args, context)\n    .then(() => config.resolve(root, params, context))\n})\n\n\nexport default twobyfour\n\n\n\n// WEBPACK FOOTER //\n// /Users/mattway/repos/twobyfour/src/twobyfour.js","module.exports = require(\"graphql\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"graphql\"\n// module id = 8\n// module chunks = 0","\n/**\n * Perform an Array.map like function on an object\n */\nconst mapObj = (o, f, ctx) => {\n  ctx = ctx || this\n  var result = {}\n  Object.keys(o).forEach(k => {\n    result[k] = f.call(ctx, o[k], k, o);\n  })\n  return result\n}\n\n/**\n * Check if a variable is an object with keys\n */\nconst isObjectWithKeys = value => {\n  return typeof value === 'object' && Object.keys(value).length > 0\n}\n\nexport {\n  mapObj,\n  isObjectWithKeys\n}\n\n\n// WEBPACK FOOTER //\n// /Users/mattway/repos/twobyfour/src/utils.js","/**\n * This types file is used, in case there needs to be multi module type\n * matching at some stage. Grambda converts to the correct types when\n * being parsed by certain modules. It is only for scalar types currently\n */\nimport { \n  GraphQLString,\n  GraphQLInt,\n  GraphQLFloat,\n  GraphQLBoolean,\n  GraphQLID\n} from 'graphql'\n\nexport default {\n  String: { graphql: GraphQLString },\n  Int: { graphql: GraphQLInt },\n  Float: { graphql: GraphQLFloat },\n  Boolean: { graphql: GraphQLBoolean },\n  ID: { graphql: GraphQLID }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/mattway/repos/twobyfour/src/types.js","/**\n * Dynamodb interface implementation for twobyfour\n */\n\n/**\n * The document client used to interface with the database\n */\nlet docClient\nconst setDoc = doc => docClient = doc\n\n/**\n * The cache used to store resources grabbed within a single call.\n * This is so that if multiple fields/permissions/validations require the\n * same resource within a call, it will only be grabbed once\n */\nlet resourceCache = {}\n\n/**\n * Clear the resource cache\n */\nconst clearCache = () => resourceCache = {}\n\n/**\n * Get a resource from the DB\n * The params provided match graphql's param object layout and context\n */\nconst getResource = (params, context) => {\n  return docClient.get(params).promise().then(result => {\n    return result.Item ? result.Item : Promise.reject(new Error('(getResource): Resource could not be found'))\n  })\n}\n\n/**\n * Put a resource in the DB\n * The params given match graphql's param object layout and context\n */\nconst putResource = (params, context) => {\n  return docClient.put(params).promise()\n}\n\n/**\n * Update a resource in the DB\n * The params given match graphq's param object layout and context\n */\nconst updateResource = (table, params, context) => {\n\n}\n\n/**\n * Delete a resource in the DB\n * The params given match graphq's param object layout and context\n */\nconst deleteResource = (table, params, context) => {\n\n}\n\nexport default {\n  setDoc,\n  getResource,\n  putResource\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/mattway/repos/twobyfour/src/db/dynamodb.js","import queries from './queries'\nimport mutations from './mutations'\n\nexport default {\n  queries,\n  mutations\n}\n\n\n// WEBPACK FOOTER //\n// ./model/index.js","import channel from './channel'\n\nexport default {\n  channel\n}\n\n\n// WEBPACK FOOTER //\n// ./model/queries/index.js","\nimport { channel, channelInput } from '../types'\n\nexport default {\n  type: channel,\n  description: 'Find a certain channel by slug id',\n  args: {\n    slug: channelInput.fields.slug,\n  },\n  permissions: [\n    /*Permissions.channelOwner,\n    (args, { token }) => {\n      if(args.slug !== token.channel){\n        return Promise.reject(new Error('You must be channel owner to run this query'))\n      }\n    },\n    (args, { DB }) => {\n      return DB.getResource('someresource', args.something)\n        .then(item => {\n          if(item.name !== 'person'){\n            return Promise.reject(new Error('Some thing inside some resource doesn\\'t check out'))\n          }\n        })\n    }*/\n  ],\n  resolve (root, params, context) {\n    return context.DB.getResource({\n      TableName: channel.TABLE_NAME,\n      Key: params\n    }, context)\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./model/queries/channel.js","import recentVideo from './recent_video'\nimport channel from './channel'\nimport channelInput from './channel_input'\nimport video from './video'\nimport videoInput from './video_input'\n\nexport {\n  recentVideo,\n  channel,\n  channelInput,\n  video,\n  videoInput\n}\n\n\n// WEBPACK FOOTER //\n// ./model/types/index.js","import { Types } from 'twobyfour'\n\nexport default {\n  name: 'recentVideo',\n  fields: {\n    channel_position: {\n      type: Types.Int,\n      description: 'The position of the recent video in the channel. Also the lookup id.'\n    },\n    youtube_id: {\n      type: Types.String,\n      description: 'The youtube if of the recent video'\n    },\n    title: {\n      type: Types.String,\n      description: 'The title of the recent video'\n    },\n    duration: {\n      type: Types.Int,\n      description: 'The duration of the recent video'\n    }\n  },\n  resolve(channel, params, context) {\n    return channel.recent_videos\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./model/types/recent_video.js","import { Types } from 'twobyfour'\nimport recentVideo from './recent_video'\n\nexport default {\n  TABLE_NAME: 'churn-channels',\n  name: 'channel',\n  fields: {\n    slug: {\n      type: Types.String,\n      description: 'URL slug for the channel and also primary id'\n    },\n    title: {\n      type: Types.String,\n      description: 'The title of the channel'\n    },\n    blurb: {\n      type: Types.String,\n      description: 'A blurb explaining what the channel is about'\n    },\n    logo_url: {\n      type: Types.String,\n      description: 'The URL of the logo image for the channel'\n    },\n    external_url: {\n      type: Types.String,\n      description: 'The external URL related to the channel'\n    },\n    external_facebook: {\n      type: Types.String,\n      description: 'The facebook URL related to the channel'\n    },\n    external_twitter: {\n      type: Types.String,\n      description: 'The twitter URL related to the channel'\n    },\n    external_instagram: {\n      type: Types.String,\n      description: 'The instagram URL related to the channel'\n    },\n    recent_videos: {\n      list: true,\n      description: 'The list of most recently added videos',\n      type: recentVideo\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./model/types/channel.js","import { Types } from 'twobyfour'\nimport { isLength, matches, isURL } from '../validators'\n\nexport default {\n  name: 'channelInput',\n  input: true,\n  fields: {\n    slug: {\n      type: Types.String,\n      description: 'The desired URL slug for the channel',\n      required: true,\n      validators: [\n        isLength(1, 64),\n        matches(/^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$/)\n      ]\n    },\n    title: {\n      type: Types.String,\n      description: 'The title of the channel',\n      required: true,\n      validators: [\n        isLength(1, 64)\n      ]\n    },\n    blurb: {\n      type: Types.String,\n      description: 'A blurb explaining what the channel is about',\n      validators: [\n        isLength(1, 256)\n      ]\n    },\n    logo_url: {\n      type: Types.String,\n      description: 'The URL of the logo image for the channel',\n      required: true,\n      validators: [\n        isURL()\n      ]\n    },\n    external_url: {\n      type: Types.String,\n      description: 'The external URL related to the channel',\n      validators: [\n        isURL()\n      ]\n    },\n    external_facebook: {\n      type: Types.String,\n      description: 'The facebook URL related to the channel',\n      validators: [\n        isURL()\n      ]\n    },\n    external_twitter: {\n      type: Types.String,\n      description: 'The twitter URL related to the channel',\n      validators: [\n        isURL()\n      ]\n    },\n    external_instagram: {\n      type: Types.String,\n      description: 'The instagram URL related to the channel',\n      validators: [\n        isURL()\n      ]\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./model/types/channel_input.js","/**\n * Common validation functions\n * Mostly wrapped versions of node-validator with error strings\n */\nimport {\n  isLength as _isLength,\n  matches as _matches,\n  isAlphanumeric as _isAlphanumeric,\n  isURL as _isURL\n} from 'validator'\n\n// convenience error func\nconst errReject = (key, str, msg) => Promise.reject(new Error(`(${key}: ${str}) - ${msg}`))\n\n/**\n * Check length of string\n */\nconst isLength = (min, max, options = {}) => {\n  return (key, str) => {\n    if(!_isLength(str, { min, max, ...options })){\n      return errReject(key, str, `Invalid length. Must be between ${min} and ${max} characters.`)\n    }\n  }\n}\n\n/**\n * Check for regex match for string\n */\nconst matches = (regex, mod) => {\n  return (key, str) => {\n    if(!_matches(str, regex, mod)){\n      return errReject(key, str, `Invalid string. Must mutch regular expression: ${regex}.`)\n    }\n  }\n}\n\n/**\n * Check if string is alphanumeric\n **/\nconst isAlphanumeric = locale => {\n  return (key, str) => {\n    if(!_isAlphanumeric(str, locale)){\n      return errReject(key, str, 'String must be contain only letters and numbers')\n    }\n  }\n}\n\n/**\n * Check is string is a valid URL\n **/\nconst isURL = options => {\n  return (key, str) => {\n    if(!_isURL(str, options)){\n      return errReject(key, str, 'String must be a valid URL.')\n    }\n  }\n}\n\nexport {\n  isLength,\n  matches,\n  isAlphanumeric,\n  isURL\n}\n\n\n// WEBPACK FOOTER //\n// ./model/validators/index.js","module.exports = require(\"validator\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"validator\"\n// module id = 20\n// module chunks = 0","import { Types } from 'twobyfour'\n\nexport default {\n  name: 'video',\n  fields: {\n    url: {\n      type: Types.String,\n      description: 'The URL by which the video was added',\n    },\n    channel_id: {\n      type: Types.String,\n      description: 'The slug id of the owning channel',\n    },\n    channel_position: {\n      type: Types.Int,\n      description: 'the order of the video in the channel (reverse)',\n    },\n    youtube_id: {\n      type: Types.String,\n      description: 'The Youtube video id',\n    },\n    time_added: {\n      type: Types.String,\n      description: 'When the video was added to the channel',\n    },\n    title: {\n      type: Types.String,\n      description: 'The title of the video',\n    },\n    duration: {\n      type: Types.Int,\n      description: 'Duration of the video in seconds',\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./model/types/video.js","import { Types } from 'twobyfour'\nimport { isURL } from '../validators'\n\nexport default {\n  name: 'videoInput',\n  input: true,\n  fields: {\n    channel_id: {\n      type: Types.String,\n      required: true,\n      description: 'The slug id of the owning channel'\n    },\n    url: {\n      type: Types.String,\n      required: true,\n      description: 'The URL of the video to be added to the channel',\n      validators: isURL()\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./model/types/video_input.js","import createChannel from './create_channel'\nimport updateChannel from './update_channel'\nimport addVideo from './add_video'\n\nexport default {\n  createChannel,\n  //updateChannel,\n  //addVideo\n}\n\n\n// WEBPACK FOOTER //\n// ./model/mutations/index.js","\nimport { channel, channelInput } from '../types'\n\nexport default {\n  name: 'createChannel',\n  description: 'create a new channel',\n  type: channel,\n  args: {\n    channel: channelInput\n  },\n  permissions: [],\n  resolve (root, params, context) {\n    return context.DB.putResource({\n      TableName: channel.TABLE_NAME,\n      Item: params.channel,\n      Expected: {\n        slug: { Exists: false }\n      }\n    }, context).then(() => params.channel)\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./model/mutations/create_channel.js"],"sourceRoot":""}